<template>
  <div class="offter-edit">
    <group class="basic-info">
        <popup-radio class="user-defined" title="最高学历" placeholder="请选择最高学历" :options="eduHistoryCodes" v-model="form.hightestEduHistoryCode"></popup-radio>
        <cell title="知名公司offer">
          <x-button slot="default" mini plain type="primary" @click.native="btnClick">添加</x-button>
        </cell>
        <div v-for="(offer, index) in list" :key="index">
          <el-input v-model="list[index]"><el-button slot="append" @click.native="handleIconClick(index)">删除</el-button></el-input>
        </div>
    </group>
    <x-button class="basic-btn" type="warn" @click.native="save">保存</x-button>
  </div>
</template>

<script>
  import { Group, XInput, XButton, Cell, XTextarea, Confirm, PopupRadio } from 'vux'

  export default {
    name: 'offter-edit',
    components: { Group, XInput, XButton, Cell, XTextarea, Confirm, PopupRadio },
    data() {
      return {
        list: [],
        form: {
          hightestEduHistoryCode: '',
          offerList: []
        },
        eduHistoryCodes: [
          {
            key: '001',
            value: '中技'
          }, {
            key: '002',
            value: '中专'
          }, {
            key: '003',
            value: '大专'
          }, {
            key: '004',
            value: '本科'
          }, {
            key: '005',
            value: '硕士'
          }, {
            key: '006',
            value: '博士'
          }, {
            key: '007',
            value: 'MBA'
          }
        ]
      }
    },
    created() {
      console.log(this.$store.state.resume.resume.eduBgdValue)
      this.form.hightestEduHistoryCode = this.$store.state.resume.resume.eduBgdValue.hightestEduCode
      if (this.$store.state.resume.resume.eduBgdValue.offerList) {
        this.list = this.$store.state.resume.resume.eduBgdValue.offerList
      } else {
        var arr = []
        this.list = arr
      }
    },
    methods: {
      save: function () {
        for (var i = 0; i < this.list.length; i++) {
          if (this.list[i] !== '') {
            this.form.offerList.push(this.list[i])
          }
        }
        this.$store.dispatch('editOffer', this.form).then(res => {
          console.log(res)
          if (res.data.code === '200') {
            this.isLoading = true
            this.$router.replace({path: '/resume'})
          } else {
            this.$vux.toast.text(res.data.message)
          }
        })
      },
      btnClick () {
        var obj = ''
        this.list.push(obj)
      },
      handleIconClick (index) {
        if (isNaN(index) || index >= this.list.length) {
          return false
        }
        let newList = []
        for (var i = 0; i < this.list.length; i++){
          if (index !== i){
            newList.push(this.list[i])
          }
        }
        this.list = newList
      }
    }
  }
</script>

<style scoped>
.offter-edit{
    background: #f1f1f1;
}
.basic-btn{
    position: fixed;
    bottom: 0;
    border-radius: 0;
}
.weui-btn_warn{
  background: #D86471;
}

</style>
<style>
  .offter-edit .weui-textarea{
    background: #f1f1f1;
    padding:10px;
    min-height:200px;
  }
  .offter-edit .el-input{
    padding: 0 15px;
  }
  .offter-edit .el-input__inner{
    height: 42px;
    border: none;
    border-radius: 0;
    border-top: 1px solid #d9d9d9;
  }
  .offter-edit .el-input-group__append {
    border-left: 0;
    border: none;
    border-radius: 0;
    border-top: 1px solid #d9d9d9;
    background: #fff;
    color: #d84343;
  }
</style>

