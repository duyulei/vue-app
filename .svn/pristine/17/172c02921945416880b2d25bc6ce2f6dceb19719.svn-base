<template>
  <div class="app">
    <!-- main content -->

    <transition :name="'vux-pop-' + (direction === 'forward' ? 'in' : 'out')">
      <keep-alive v-if="$route.meta.keepAlive">
        <router-view v-if="$route.meta.keepAlive" class="router-view"></router-view>
      </keep-alive>
      <router-view v-if="!$route.meta.keepAlive" class="router-view"></router-view>
    </transition>

  </div>
</template>

<script>
  import { mapState } from 'vuex'
  import { XHeader } from 'vux'

  export default {
    name: 'app',
    components: {
      XHeader
    },
    data () {
      return {}
    },
    computed: {
      ...mapState({
        direction: state => state.vux.direction
      })
    }
  }
</script>


<style lang="less">
  @import '~vux/src/styles/reset.less';

  * {
    box-sizing: border-box;
  }

  body {
    background-color: #FFF;
    font-size: 13px;
    color: #444444;
    font-family: 'Source Sans Pro', Helvetica Neue, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  html, body {
    height: 100%;
    width: 100%;
    text-size-adjust: none;
    overflow-x: hidden;
  }

  .app {
    width: 100%;
    height: 100%;
  }

  .router-view {
    width: 100%;
    height: 100%;
  }
  .vux-datetime{
    font-weight: 100 !important;
  }
  .vux-pop-out-enter-active,
  .vux-pop-out-leave-active,
  .vux-pop-in-enter-active,
  .vux-pop-in-leave-active {
    will-change: transform;
    transition: all .6s ease .1s;
    height: 100%;
    width: 100%;
    position: absolute;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    perspective: 1000;
  }

  .vux-pop-out-enter,
  .vux-pop-in-leave-active {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }

  .vux-pop-in-enter,
  .vux-pop-out-leave-active {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }

  .user-defined:after {
    content: "";
    position: absolute;
    left: 7px;
    top: 15px;
    height: 20px;
    width: 3px;
    background: #D86471;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5);
  }

  *::-webkit-input-placeholder { /* WebKit browsers */
    color: #bbb;
    font-size: 14px;
  }

  *:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: #bbb;
    font-size: 14px;
  }

  *::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: #bbb;
    font-size: 14px;
  }

  *:-ms-input-placeholder { /* Internet Explorer 10+ */
    color: #bbb;
    font-size: 14px;
  }

  .vux-cell-placeholder {
    color: #bbb !important;
    font-size: 14px !important;
  }

  .vux-cell-value {
    color: #444 !important;
  }

  .mint-indicator-wrapper {
    background: #d86372
  }

  /* latin-ext */
  @font-face {
    font-family: 'Roboto Mono';
    font-style: normal;
    font-weight: 400;
    src: local('Roboto Mono'), local('RobotoMono-Regular'), url(/static/font/hMqPNLsu_dywMa4C_DEpY6E8kM4xWR1_1bYURRojRGc.woff2) format('woff2');
    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
  }

  /* latin */
  @font-face {
    font-family: 'Roboto Mono';
    font-style: normal;
    font-weight: 400;
    src: local('Roboto Mono'), local('RobotoMono-Regular'), url(/static/font/hMqPNLsu_dywMa4C_DEpY4gp9Q8gbYrhqGlRav_IXfk.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
  }

  /* latin-ext */
  @font-face {
    font-family: 'Source Sans Pro';
    font-style: normal;
    font-weight: 400;
    src: local('Source Sans Pro'), local('SourceSansPro-Regular'), url(/static/font/ODelI1aHBYDBqgeIAH2zlIa1YDtoarzwSXxTHggEXMw.woff2) format('woff2');
    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
  }

  /* latin */
  @font-face {
    font-family: 'Source Sans Pro';
    font-style: normal;
    font-weight: 400;
    src: local('Source Sans Pro'), local('SourceSansPro-Regular'), url(/static/font/ODelI1aHBYDBqgeIAH2zlJbPFduIYtoLzwST68uhz_Y.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
  }

  /* latin-ext */
  @font-face {
    font-family: 'Source Sans Pro';
    font-style: normal;
    font-weight: 600;
    src: local('Source Sans Pro Semibold'), local('SourceSansPro-Semibold'), url(/static/font/toadOcfmlt9b38dHJxOBGKyGJhAh-RE0BxGcd_izyev3rGVtsTkPsbDajuO5ueQw.woff2) format('woff2');
    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
  }

  /* latin */
  @font-face {
    font-family: 'Source Sans Pro';
    font-style: normal;
    font-weight: 600;
    src: local('Source Sans Pro Semibold'), local('SourceSansPro-Semibold'), url(/static/font/toadOcfmlt9b38dHJxOBGMzFoXZ-Kj537nB_-9jJhlA.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
  }

  /* latin */
  @font-face {
    font-family: 'Dosis';
    font-style: normal;
    font-weight: 500;
    src: local('Dosis Medium'), local('Dosis-Medium'), url(/static/font/mAcLJWdPWDNiDJwJvcWKc3YhjbSpvc47ee6xR_80Hnw.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
  }
</style>

